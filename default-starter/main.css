/* temp */
body {
  padding: 2rem 2rem;
}
/* temp */

@import url('https://fonts.googleapis.com/css?family=Karla:400|Spectral:400');

*,
::after,
::before {
  box-sizing: border-box;
}

html {
  font-size: 100%;
} /*16px*/

/* 
==================
Variables
==================

  - Heading fonts
  - Body Fonts
  - Small text (em) relative to the parents
      e.g font-size of alerts on formInputs relative to font-size of the input value 
*/

:root {
  /* colors */

  /* lighter shades */
  --primary-100: #e0deff;
  --primary-200: #c1beff;
  --primary-300: #a29dff;
  --primary-400: #837dff;
  /* primary */
  --primary-500: #645cff;
  /* darker shades */
  --primary-600: #504acc;
  --primary-700: #3c3799;
  --primary-800: #282566;
  --primary-900: #141233;

  /* grey */
  --grey-50: #f8fafc;
  --grey-100: #f1f5f9;
  --grey-200: #e2e8f0;
  --grey-300: #cbd5e1;
  --grey-400: #94a3b8;
  --grey-500: #64748b;
  --grey-600: #475569;
  --grey-700: #334155;
  --grey-800: #1e293b;
  --grey-900: #0f172a;

  /* rest of the colors */
  --black: #222;
  --white: #fff;
  --red-light: #f8d7da;
  --red-dark: #842029;
  --green-light: #d1e7dd;
  --green-dark: #0f5132;

  /* fonts */
  --headingFont: 'Spectral', serif;
  --bodyFont: 'Karla', sans-serif;
  --smallText: 0.7em;

  /* rest of the vars */
  --backgroundColor: var(--grey-50);
  --textColor: var(--grey-900);
  --borderRadius: 0.25rem;
  --letterSpacing: 1px;
  --transition: all 0.3s ease-in-out;
  --max-width: 1120px;
  --fixed-width: 600px;

  /* box-shadow */
  --shadow-1: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-2: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-3: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --shadow-4: 0 20px 25px -5px rgb(0 0 0 / 0.1),
    0 8px 10px -6px rgb(0 0 0 / 0.1);
}

/* Body
      - background-color : Lightest grey
      - color : darkest grey
*/

body {
  background: var(--backgroundColor);
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.75;
  color: var(--textColor);
}

/* Paragraphs
==============
  - Margin bottom of 1.5rem
  - set max-width of p from 35em - 45em */

p {
  margin-bottom: 1.5rem;
  max-width: 40em;
}

/* Headings
==============
  - margin-top is always a pain 
  - remove margin
      margin:0;
  -add margin-bottom
      margin-bottom:1.38rem;
  -capitalize the headings
*/

h1,
h2,
h3,
h4,
h5 {
  margin: 0;
  margin-bottom: 1.38rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.3;
  text-transform: capitalize;
}

h1 {
  margin-top: 0;
  font-size: 3.052rem;
}

h2 {
  font-size: 2.441rem;
}

h3 {
  font-size: 1.953rem;
}

h4 {
  font-size: 1.563rem;
}

h5 {
  font-size: 1.25rem;
}

small,
.text-small {
  font-size: var(--smallText);
}

/* Links 
    - Remove the annoying underline
*/

a {
  text-decoration: none;
}

/* ul 
    - Remove bullets
    - Remove padding to remove extra space
*/

ul {
  list-style-type: none;
  padding: 0;
}

/* Images 
    - By default , images comes with their own width and height
    - Normally controlled with the parent container
      - If you set the width of the parent container then the width of the img needs to be 100%
      - If you set the height of the parent container then the height of the img needs to be 100%
    - Images by default are inline - if you don't add display:block , you will have weird space below the container
    - Object-fit:cover ensures that the image is not distorted - if width/height has been specified
    - use of classes when selecting images (more-control)
      - Exclude logo which does not need to span 100% (default setup)
      /* Exclude logo */
/* img:not(.nav-logo) {
            width: 100%;
            display: block;
            object-fit: cover;
          } 
      
  */
.container {
  width: 40vw;
  border: 1px solid var(--primary-500);
  border-radius: var(--borderRadius);
  max-width: var(--max-width);
}

.img {
  width: 100%;
  display: block;
  object-fit: cover;
}

/* Buttons 
    - add Cursor to be pointer
    - Remove border
    - add some padding top/bottom left/right
    - box-shadow
    - border-radius
    - letter spacing
    - transition during hover
    - add hover effect
        - change background
        - increase box-shadow
    - display - inline block 
        - makes vertical margins to be respected
        - when it comes to centering , starts with the parent 
        - decide where the button is going to be positioned (left / right/center)
    - display - block
        - set some width
        - set margin to auto (left and right)
*/
.btn {
  cursor: pointer;
  color: var(--white);
  background: var(--primary-500);
  border: transparent;
  border-radius: var(--borderRadius);
  letter-spacing: var(--letterSpacing);
  text-transform: capitalize;
  padding: 0.375rem 0.75rem;
  box-shadow: var(--shadow-1);
  transition: var(--transition);
}

.btn:hover {
  background: var(--primary-700);
  box-shadow: var(--shadow-3);
}

.btn-hipster {
  color: var(--primary-500);
  background: var(--primary-200);
}

.btn-hipster:hover {
  color: var(--primary-200);
  background: var(--primary-700);
}

.btn-block {
  width: 100%;
}

/* Alerts

  - Add generic styles
      .alert {
      }

  - Add styles specific to that button
     .alert-danger{}
     .alert-success{}

*/

.alert {
  padding: 0.375rem 0.75rem;
  margin-bottom: 1rem;
  border-color: transparent;
  border-radius: var(--borderRadius);
}

.alert-danger {
  background: var(--red-light);
  color: var(--red-dark);
}

.alert-success {
  background: var(--green-light);
  color: var(--green-dark);
}

/* FORMS 
=========

Form
=======
  - Starting with the small screen (set width to 90% of the screen size)
  - Set max-width (Don't get bigger than 600px for big screens)
  - Add background-color
  - Add border radius
  - Add box-shadow
  - Add top/bottom and left/right padding
  - Either set a container to be parent to the form and use it for centering / Apply it directly on the form  (use margin :3rem auto)

Labels
========
  - Use display:block to start in new line
  - Font-size - Use small text (em) dependent on the parent
  - Add margin-bottom
  - Capitalize the label
  - Add letter spacing

Form Input -vs- Textarea
======================
  - We can group this 2 since they will have the same styles instead of doing it separately
  - Set width to 100% - prefers input spanning 100% of the width of the form
  - Add some padding (top/bottom left/right)
  - Add border radius to get nice rounded corners
  - Add background color (lightest gray of 50)
  - Add border (1px solid gray-200)

Form row
=========

   - Add some distance between the rows


Form Textarea
=============

   - Control rows/column using CSS
   - Since we aleady set the width we can just do height which might vary with different projects

Placeholder
=============
   - Inherit font family from the parent
   - Add color of your choice


Error messages - Mainly Added dynamically
==============

   - Use small element (HTML)
   - Uses specified font-size from the default setup
  
*/

.form {
  width: 90vw;
  max-width: var(--fixed-width);
  background: var(--white);
  border-radius: var(--borderRadius);
  box-shadow: var(--shadow-2);
  padding: 2rem 2.5rem;
  margin: 3rem auto;
}

.form-label {
  display: block;
  font-size: var(--smallText);
  margin-bottom: 0.5rem;
  text-transform: capitalize;
  letter-spacing: var(--letterSpacing);
}

.form-input,
.form-textarea {
  width: 100%;
  padding: 0.375rem 0.75rem;
  border-radius: var(--borderRadius);
  background: var(--backgroundColor);
  border: 1px solid var(--grey-200);
}

.form-row {
  margin-bottom: 1rem;
}

.form-textarea {
  height: 7rem;
}

::placeholder {
  font-family: inherit;
  color: var(--grey-400);
}

.form-alert {
  color: var(--red-dark);
  letter-spacing: var(--letterSpacing);
  text-transform: capitalize;
}

/* Loading spinner 
=================
  - Make a rounded circle with some width/height and 50% border radius
  - Add  border-top-color (darker-shade idearly)
  - Use animation
  - Set keyframes
      -rotate 360degrees 
  - Attach the animation to the element
*/
.loading {
  width: 6rem;
  height: 6rem;
  margin: 0 auto;
  border: 5px solid var(--grey-400);
  border-radius: 50%;
  border-top-color: var(--primary-500);
  animation: spinner 0.6s linear infinite;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}
